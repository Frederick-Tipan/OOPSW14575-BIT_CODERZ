package ec.edu.espe.organivent.view;

import ec.edu.espe.organivent.controller.ArtistController;
import ec.edu.espe.organivent.controller.EquipmentController;
import ec.edu.espe.organivent.controller.EventController;
import ec.edu.espe.organivent.controller.EventPlaceController;
import ec.edu.espe.organivent.controller.StaffController;
import ec.edu.espe.organivent.model.Artist;
import ec.edu.espe.organivent.model.Equipment;
import ec.edu.espe.organivent.model.Event;
import ec.edu.espe.organivent.model.EventPlace;
import ec.edu.espe.organivent.model.Expense;
import ec.edu.espe.organivent.model.PenaltyFee;
import ec.edu.espe.organivent.model.Schedule;
import ec.edu.espe.organivent.model.Staff;
import ec.edu.espe.organivent.utils.HandleInput;
import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;

/**
 *
 * @author Frederick
 */
public class FrmAddEvent extends javax.swing.JFrame {

    private Color btnDefaultColor = new Color(63,115,193);
    private Color btnHoverColor = new Color(48,88,149);
    private Event event;
    private Artist artist;
    private EventPlace eventPlace;
    private Schedule startTime;
    private Schedule endTime;
    private ArrayList<Staff> staff;
    private ArrayList<Equipment> equipment;
    private ArrayList<Expense> generalExpenses = new ArrayList<>();
    private ArrayList<PenaltyFee> penaltyFees = new ArrayList<>();
    
    
    /**
     * Creates new form FrmAddEvent
     */
    public FrmAddEvent() {
        initComponents();
        asignNewId();
        loadArtists();
        loadEventPlaces();
        loadStaff();
        loadEquipment();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        background = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        sptTitle = new javax.swing.JSeparator();
        txtId = new javax.swing.JLabel();
        txtIdValue = new javax.swing.JLabel();
        btnConfirm = new javax.swing.JPanel();
        txtConfirmbtn = new javax.swing.JLabel();
        btnReturn = new javax.swing.JPanel();
        txtReturnbtn = new javax.swing.JLabel();
        txtFechaInicio = new javax.swing.JLabel();
        txtArtista = new javax.swing.JLabel();
        txtLugar = new javax.swing.JLabel();
        txtStaff = new javax.swing.JLabel();
        txtEquipos = new javax.swing.JLabel();
        txtFechaFin = new javax.swing.JLabel();
        txtMinFin = new javax.swing.JLabel();
        txtHoraIn = new javax.swing.JLabel();
        txtMinIn = new javax.swing.JLabel();
        txtHoraFin = new javax.swing.JLabel();
        pnlStartDate = new javax.swing.JPanel();
        spnStHour = new javax.swing.JSpinner();
        spnStMin = new javax.swing.JSpinner();
        pnlStDate = new javax.swing.JPanel();
        txtStartTime = new javax.swing.JLabel();
        btnStDtOp = new javax.swing.JPanel();
        txtOpStDate = new javax.swing.JLabel();
        pnlEndDate = new javax.swing.JPanel();
        spnEndHour = new javax.swing.JSpinner();
        spnEndMin = new javax.swing.JSpinner();
        pnlEdDate = new javax.swing.JPanel();
        txtEndTime = new javax.swing.JLabel();
        btnEdDtOp = new javax.swing.JPanel();
        txtOpEdDate = new javax.swing.JLabel();
        txtMultas = new javax.swing.JLabel();
        txtAddPntFee = new javax.swing.JLabel();
        txtGastos = new javax.swing.JLabel();
        txtInsertados = new javax.swing.JLabel();
        txtAddExpense = new javax.swing.JLabel();
        txtInsertado = new javax.swing.JLabel();
        pnlGeneralExpenses = new javax.swing.JPanel();
        scpnGnrExps = new javax.swing.JScrollPane();
        lstGnrExps = new javax.swing.JList<>();
        pnlPenaltyFees = new javax.swing.JPanel();
        scpnPntFs = new javax.swing.JScrollPane();
        lsPntFs = new javax.swing.JList<>();
        cmbEventPlace = new javax.swing.JComboBox<>();
        cmbArtist = new javax.swing.JComboBox<>();
        scpnEquipment = new javax.swing.JScrollPane();
        lstEquipment = new javax.swing.JList<>();
        scpnStaff = new javax.swing.JScrollPane();
        lstStaff = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        setMaximumSize(new java.awt.Dimension(770, 375));
        setMinimumSize(new java.awt.Dimension(770, 375));
        setResizable(false);

        background.setBackground(new java.awt.Color(255, 255, 255));
        background.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        title.setFont(new java.awt.Font("Inter SemiBold", 0, 20)); // NOI18N
        title.setForeground(new java.awt.Color(32, 108, 141));
        title.setText(org.openide.util.NbBundle.getMessage(FrmAddEvent.class, "FrmAddEvent.title.text")); // NOI18N
        background.add(title, new org.netbeans.lib.awtextra.AbsoluteConstraints(299, 25, -1, -1));

        sptTitle.setBackground(new java.awt.Color(116, 178, 237));
        sptTitle.setForeground(new java.awt.Color(116, 178, 237));
        sptTitle.setMaximumSize(new java.awt.Dimension(266, 1));
        sptTitle.setMinimumSize(new java.awt.Dimension(266, 1));
        sptTitle.setOpaque(true);
        sptTitle.setPreferredSize(new java.awt.Dimension(266, 1));
        background.add(sptTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(247, 55, -1, -1));

        txtId.setFont(new java.awt.Font("Inter", 0, 14)); // NOI18N
        txtId.setForeground(new java.awt.Color(135, 132, 132));
        txtId.setText(org.openide.util.NbBundle.getMessage(FrmAddEvent.class, "FrmAddEvent.txtId.text")); // NOI18N
        background.add(txtId, new org.netbeans.lib.awtextra.AbsoluteConstraints(591, 28, -1, -1));

        txtIdValue.setFont(new java.awt.Font("Inter", 0, 14)); // NOI18N
        txtIdValue.setText(org.openide.util.NbBundle.getMessage(FrmAddEvent.class, "FrmAddEvent.txtIdValue.text")); // NOI18N
        background.add(txtIdValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 29, 60, -1));

        btnConfirm.setBackground(new java.awt.Color(63, 115, 193));
        btnConfirm.setMaximumSize(new java.awt.Dimension(94, 27));
        btnConfirm.setMinimumSize(new java.awt.Dimension(94, 27));

        txtConfirmbtn.setFont(new java.awt.Font("Inter SemiBold", 0, 15)); // NOI18N
        txtConfirmbtn.setForeground(new java.awt.Color(255, 255, 255));
        txtConfirmbtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtConfirmbtn.setText(org.openide.util.NbBundle.getMessage(FrmAddEvent.class, "FrmAddEvent.txtConfirmbtn.text")); // NOI18N
        txtConfirmbtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtConfirmbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtConfirmbtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txtConfirmbtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txtConfirmbtnMouseExited(evt);
            }
        });

        javax.swing.GroupLayout btnConfirmLayout = new javax.swing.GroupLayout(btnConfirm);
        btnConfirm.setLayout(btnConfirmLayout);
        btnConfirmLayout.setHorizontalGroup(
            btnConfirmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtConfirmbtn, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
        );
        btnConfirmLayout.setVerticalGroup(
            btnConfirmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtConfirmbtn, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
        );

        background.add(btnConfirm, new org.netbeans.lib.awtextra.AbsoluteConstraints(636, 323, -1, -1));

        btnReturn.setBackground(new java.awt.Color(63, 115, 193));
        btnReturn.setMaximumSize(new java.awt.Dimension(94, 27));
        btnReturn.setMinimumSize(new java.awt.Dimension(94, 27));
        btnReturn.setPreferredSize(new java.awt.Dimension(94, 27));

        txtReturnbtn.setFont(new java.awt.Font("Inter SemiBold", 0, 15)); // NOI18N
        txtReturnbtn.setForeground(new java.awt.Color(255, 255, 255));
        txtReturnbtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtReturnbtn.setText(org.openide.util.NbBundle.getMessage(FrmAddEvent.class, "FrmAddEvent.txtReturnbtn.text")); // NOI18N
        txtReturnbtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtReturnbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtReturnbtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txtReturnbtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txtReturnbtnMouseExited(evt);
            }
        });

        javax.swing.GroupLayout btnReturnLayout = new javax.swing.GroupLayout(btnReturn);
        btnReturn.setLayout(btnReturnLayout);
        btnReturnLayout.setHorizontalGroup(
            btnReturnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtReturnbtn, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
        );
        btnReturnLayout.setVerticalGroup(
            btnReturnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtReturnbtn, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
        );

        background.add(btnReturn, new org.netbeans.lib.awtextra.AbsoluteConstraints(519, 323, -1, -1));

        txtFechaInicio.setFont(new java.awt.Font("Inter", 0, 14)); // NOI18N
        txtFechaInicio.setForeground(new java.awt.Color(255, 255, 255));
        txtFechaInicio.setText(org.openide.util.NbBundle.getMessage(FrmAddEvent.class, "FrmAddEvent.txtFechaInicio.text")); // NOI18N
        background.add(txtFechaInicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(69, 63, -1, -1));

        txtArtista.setFont(new java.awt.Font("Inter", 0, 14)); // NOI18N
        txtArtista.setForeground(new java.awt.Color(135, 132, 132));
        txtArtista.setText(org.openide.util.NbBundle.getMessage(FrmAddEvent.class, "FrmAddEvent.txtArtista.text")); // NOI18N
        background.add(txtArtista, new org.netbeans.lib.awtextra.AbsoluteConstraints(273, 83, -1, -1));

        txtLugar.setFont(new java.awt.Font("Inter", 0, 14)); // NOI18N
        txtLugar.setForeground(new java.awt.Color(135, 132, 132));
        txtLugar.setText(org.openide.util.NbBundle.getMessage(FrmAddEvent.class, "FrmAddEvent.txtLugar.text")); // NOI18N
        background.add(txtLugar, new org.netbeans.lib.awtextra.AbsoluteConstraints(273, 155, -1, -1));

        txtStaff.setFont(new java.awt.Font("Inter", 0, 14)); // NOI18N
        txtStaff.setForeground(new java.awt.Color(135, 132, 132));
        txtStaff.setText(org.openide.util.NbBundle.getMessage(FrmAddEvent.class, "FrmAddEvent.txtStaff.text")); // NOI18N
        background.add(txtStaff, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 233, -1, -1));

        txtEquipos.setFont(new java.awt.Font("Inter", 0, 14)); // NOI18N
        txtEquipos.setForeground(new java.awt.Color(135, 132, 132));
        txtEquipos.setText(org.openide.util.NbBundle.getMessage(FrmAddEvent.class, "FrmAddEvent.txtEquipos.text")); // NOI18N
        background.add(txtEquipos, new org.netbeans.lib.awtextra.AbsoluteConstraints(409, 233, -1, -1));

        txtFechaFin.setFont(new java.awt.Font("Inter", 0, 14)); // NOI18N
        txtFechaFin.setForeground(new java.awt.Color(255, 255, 255));
        txtFechaFin.setText(org.openide.util.NbBundle.getMessage(FrmAddEvent.class, "FrmAddEvent.txtFechaFin.text")); // NOI18N
        background.add(txtFechaFin, new org.netbeans.lib.awtextra.AbsoluteConstraints(56, 229, -1, -1));

        txtMinFin.setFont(new java.awt.Font("Inter", 0, 14)); // NOI18N
        txtMinFin.setForeground(new java.awt.Color(255, 255, 255));
        txtMinFin.setText(org.openide.util.NbBundle.getMessage(FrmAddEvent.class, "FrmAddEvent.txtMinFin.text")); // NOI18N
        background.add(txtMinFin, new org.netbeans.lib.awtextra.AbsoluteConstraints(148, 289, -1, -1));

        txtHoraIn.setFont(new java.awt.Font("Inter", 0, 14)); // NOI18N
        txtHoraIn.setForeground(new java.awt.Color(255, 255, 255));
        txtHoraIn.setText(org.openide.util.NbBundle.getMessage(FrmAddEvent.class, "FrmAddEvent.txtHoraIn.text")); // NOI18N
        background.add(txtHoraIn, new org.netbeans.lib.awtextra.AbsoluteConstraints(59, 123, -1, -1));

        txtMinIn.setFont(new java.awt.Font("Inter", 0, 14)); // NOI18N
        txtMinIn.setForeground(new java.awt.Color(255, 255, 255));
        txtMinIn.setText(org.openide.util.NbBundle.getMessage(FrmAddEvent.class, "FrmAddEvent.txtMinIn.text")); // NOI18N
        background.add(txtMinIn, new org.netbeans.lib.awtextra.AbsoluteConstraints(148, 123, -1, -1));

        txtHoraFin.setFont(new java.awt.Font("Inter", 0, 14)); // NOI18N
        txtHoraFin.setForeground(new java.awt.Color(255, 255, 255));
        txtHoraFin.setText(org.openide.util.NbBundle.getMessage(FrmAddEvent.class, "FrmAddEvent.txtHoraFin.text")); // NOI18N
        background.add(txtHoraFin, new org.netbeans.lib.awtextra.AbsoluteConstraints(59, 289, -1, -1));

        pnlStartDate.setBackground(new java.awt.Color(48, 108, 143));
        pnlStartDate.setMaximumSize(new java.awt.Dimension(192, 130));
        pnlStartDate.setMinimumSize(new java.awt.Dimension(192, 130));
        pnlStartDate.setPreferredSize(new java.awt.Dimension(192, 130));

        spnStHour.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        spnStHour.setModel(new javax.swing.SpinnerNumberModel(1, 1, 23, 1));

        spnStMin.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        spnStMin.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));

        pnlStDate.setBackground(new java.awt.Color(255, 255, 255));
        pnlStDate.setMaximumSize(new java.awt.Dimension(130, 20));
        pnlStDate.setMinimumSize(new java.awt.Dimension(130, 20));
        pnlStDate.setPreferredSize(new java.awt.Dimension(130, 20));

        txtStartTime.setBackground(new java.awt.Color(255, 255, 255));
        txtStartTime.setFont(new java.awt.Font("Inter", 0, 14)); // NOI18N
        txtStartTime.setText(org.openide.util.NbBundle.getMessage(FrmAddEvent.class, "FrmAddEvent.txtStartTime.text")); // NOI18N
        txtStartTime.setMaximumSize(new java.awt.Dimension(130, 20));
        txtStartTime.setMinimumSize(new java.awt.Dimension(130, 20));
        txtStartTime.setPreferredSize(new java.awt.Dimension(130, 20));

        javax.swing.GroupLayout pnlStDateLayout = new javax.swing.GroupLayout(pnlStDate);
        pnlStDate.setLayout(pnlStDateLayout);
        pnlStDateLayout.setHorizontalGroup(
            pnlStDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlStDateLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(txtStartTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlStDateLayout.setVerticalGroup(
            pnlStDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlStDateLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(txtStartTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        btnStDtOp.setBackground(new java.awt.Color(73, 160, 208));
        btnStDtOp.setMaximumSize(new java.awt.Dimension(30, 20));
        btnStDtOp.setMinimumSize(new java.awt.Dimension(30, 20));
        btnStDtOp.setPreferredSize(new java.awt.Dimension(30, 20));

        txtOpStDate.setFont(new java.awt.Font("Inter ExtraBold", 0, 18)); // NOI18N
        txtOpStDate.setForeground(new java.awt.Color(255, 255, 255));
        txtOpStDate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtOpStDate.setText(org.openide.util.NbBundle.getMessage(FrmAddEvent.class, "FrmAddEvent.txtOpStDate.text")); // NOI18N
        txtOpStDate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtOpStDate.setMaximumSize(new java.awt.Dimension(30, 20));
        txtOpStDate.setMinimumSize(new java.awt.Dimension(30, 20));
        txtOpStDate.setPreferredSize(new java.awt.Dimension(30, 20));

        javax.swing.GroupLayout btnStDtOpLayout = new javax.swing.GroupLayout(btnStDtOp);
        btnStDtOp.setLayout(btnStDtOpLayout);
        btnStDtOpLayout.setHorizontalGroup(
            btnStDtOpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtOpStDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        btnStDtOpLayout.setVerticalGroup(
            btnStDtOpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnStDtOpLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(txtOpStDate, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout pnlStartDateLayout = new javax.swing.GroupLayout(pnlStartDate);
        pnlStartDate.setLayout(pnlStartDateLayout);
        pnlStartDateLayout.setHorizontalGroup(
            pnlStartDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlStartDateLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(pnlStartDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlStartDateLayout.createSequentialGroup()
                        .addComponent(pnlStDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnStDtOp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(pnlStartDateLayout.createSequentialGroup()
                        .addComponent(spnStHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                        .addComponent(spnStMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15))))
        );
        pnlStartDateLayout.setVerticalGroup(
            pnlStartDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlStartDateLayout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addGroup(pnlStartDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlStDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnStDtOp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(pnlStartDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spnStHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spnStMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );

        background.add(pnlStartDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 54, -1, -1));

        pnlEndDate.setBackground(new java.awt.Color(48, 108, 143));
        pnlEndDate.setMaximumSize(new java.awt.Dimension(192, 130));
        pnlEndDate.setMinimumSize(new java.awt.Dimension(192, 130));

        spnEndHour.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        spnEndHour.setModel(new javax.swing.SpinnerNumberModel(1, 1, 23, 1));

        spnEndMin.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        spnEndMin.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));

        pnlEdDate.setBackground(new java.awt.Color(255, 255, 255));
        pnlEdDate.setMaximumSize(new java.awt.Dimension(130, 20));
        pnlEdDate.setMinimumSize(new java.awt.Dimension(130, 20));

        txtEndTime.setBackground(new java.awt.Color(255, 255, 255));
        txtEndTime.setFont(new java.awt.Font("Inter", 0, 14)); // NOI18N
        txtEndTime.setText(org.openide.util.NbBundle.getMessage(FrmAddEvent.class, "FrmAddEvent.txtEndTime.text")); // NOI18N
        txtEndTime.setMaximumSize(new java.awt.Dimension(130, 20));
        txtEndTime.setMinimumSize(new java.awt.Dimension(130, 20));
        txtEndTime.setPreferredSize(new java.awt.Dimension(130, 20));

        javax.swing.GroupLayout pnlEdDateLayout = new javax.swing.GroupLayout(pnlEdDate);
        pnlEdDate.setLayout(pnlEdDateLayout);
        pnlEdDateLayout.setHorizontalGroup(
            pnlEdDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtEndTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        pnlEdDateLayout.setVerticalGroup(
            pnlEdDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlEdDateLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(txtEndTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        btnEdDtOp.setBackground(new java.awt.Color(73, 160, 208));
        btnEdDtOp.setMaximumSize(new java.awt.Dimension(30, 20));
        btnEdDtOp.setMinimumSize(new java.awt.Dimension(30, 20));
        btnEdDtOp.setPreferredSize(new java.awt.Dimension(30, 20));

        txtOpEdDate.setFont(new java.awt.Font("Inter ExtraBold", 0, 18)); // NOI18N
        txtOpEdDate.setForeground(new java.awt.Color(255, 255, 255));
        txtOpEdDate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtOpEdDate.setText(org.openide.util.NbBundle.getMessage(FrmAddEvent.class, "FrmAddEvent.txtOpEdDate.text")); // NOI18N
        txtOpEdDate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtOpEdDate.setMaximumSize(new java.awt.Dimension(30, 20));
        txtOpEdDate.setMinimumSize(new java.awt.Dimension(30, 20));
        txtOpEdDate.setPreferredSize(new java.awt.Dimension(30, 20));

        javax.swing.GroupLayout btnEdDtOpLayout = new javax.swing.GroupLayout(btnEdDtOp);
        btnEdDtOp.setLayout(btnEdDtOpLayout);
        btnEdDtOpLayout.setHorizontalGroup(
            btnEdDtOpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnEdDtOpLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(txtOpEdDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        btnEdDtOpLayout.setVerticalGroup(
            btnEdDtOpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnEdDtOpLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(txtOpEdDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout pnlEndDateLayout = new javax.swing.GroupLayout(pnlEndDate);
        pnlEndDate.setLayout(pnlEndDateLayout);
        pnlEndDateLayout.setHorizontalGroup(
            pnlEndDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEndDateLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(pnlEndDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlEndDateLayout.createSequentialGroup()
                        .addComponent(pnlEdDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEdDtOp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlEndDateLayout.createSequentialGroup()
                        .addComponent(spnEndHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(spnEndMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(42, 42, 42))
        );
        pnlEndDateLayout.setVerticalGroup(
            pnlEndDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlEndDateLayout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addGroup(pnlEndDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlEdDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEdDtOp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(pnlEndDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spnEndHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spnEndMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );

        background.add(pnlEndDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, 190, -1));

        txtMultas.setFont(new java.awt.Font("Inter SemiBold", 0, 14)); // NOI18N
        txtMultas.setForeground(new java.awt.Color(255, 255, 255));
        txtMultas.setText(org.openide.util.NbBundle.getMessage(FrmAddEvent.class, "FrmAddEvent.txtMultas.text")); // NOI18N
        background.add(txtMultas, new org.netbeans.lib.awtextra.AbsoluteConstraints(606, 197, -1, -1));

        txtAddPntFee.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        txtAddPntFee.setForeground(new java.awt.Color(255, 255, 255));
        txtAddPntFee.setText(org.openide.util.NbBundle.getMessage(FrmAddEvent.class, "FrmAddEvent.txtAddPntFee.text")); // NOI18N
        txtAddPntFee.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtAddPntFee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtAddPntFeeMouseClicked(evt);
            }
        });
        background.add(txtAddPntFee, new org.netbeans.lib.awtextra.AbsoluteConstraints(675, 244, -1, -1));

        txtGastos.setFont(new java.awt.Font("Inter SemiBold", 0, 14)); // NOI18N
        txtGastos.setForeground(new java.awt.Color(255, 255, 255));
        txtGastos.setText(org.openide.util.NbBundle.getMessage(FrmAddEvent.class, "FrmAddEvent.txtGastos.text")); // NOI18N
        background.add(txtGastos, new org.netbeans.lib.awtextra.AbsoluteConstraints(567, 74, -1, -1));

        txtInsertados.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        txtInsertados.setForeground(new java.awt.Color(255, 255, 255));
        txtInsertados.setText(org.openide.util.NbBundle.getMessage(FrmAddEvent.class, "FrmAddEvent.txtInsertados.text")); // NOI18N
        background.add(txtInsertados, new org.netbeans.lib.awtextra.AbsoluteConstraints(548, 221, -1, -1));

        txtAddExpense.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        txtAddExpense.setForeground(new java.awt.Color(255, 255, 255));
        txtAddExpense.setText(org.openide.util.NbBundle.getMessage(FrmAddEvent.class, "FrmAddEvent.txtAddExpense.text")); // NOI18N
        txtAddExpense.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtAddExpense.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtAddExpenseMouseClicked(evt);
            }
        });
        background.add(txtAddExpense, new org.netbeans.lib.awtextra.AbsoluteConstraints(675, 121, -1, -1));

        txtInsertado.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        txtInsertado.setForeground(new java.awt.Color(255, 255, 255));
        txtInsertado.setText(org.openide.util.NbBundle.getMessage(FrmAddEvent.class, "FrmAddEvent.txtInsertado.text")); // NOI18N
        background.add(txtInsertado, new org.netbeans.lib.awtextra.AbsoluteConstraints(548, 98, -1, -1));

        pnlGeneralExpenses.setBackground(new java.awt.Color(48, 108, 143));
        pnlGeneralExpenses.setMaximumSize(new java.awt.Dimension(232, 110));
        pnlGeneralExpenses.setMinimumSize(new java.awt.Dimension(232, 110));
        pnlGeneralExpenses.setPreferredSize(new java.awt.Dimension(232, 110));

        lstGnrExps.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        lstGnrExps.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Sin registros" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lstGnrExps.setMaximumSize(new java.awt.Dimension(140, 35));
        lstGnrExps.setMinimumSize(new java.awt.Dimension(140, 35));
        lstGnrExps.setPreferredSize(new java.awt.Dimension(140, 35));
        scpnGnrExps.setViewportView(lstGnrExps);

        javax.swing.GroupLayout pnlGeneralExpensesLayout = new javax.swing.GroupLayout(pnlGeneralExpenses);
        pnlGeneralExpenses.setLayout(pnlGeneralExpensesLayout);
        pnlGeneralExpensesLayout.setHorizontalGroup(
            pnlGeneralExpensesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGeneralExpensesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scpnGnrExps, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(86, Short.MAX_VALUE))
        );
        pnlGeneralExpensesLayout.setVerticalGroup(
            pnlGeneralExpensesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlGeneralExpensesLayout.createSequentialGroup()
                .addContainerGap(54, Short.MAX_VALUE)
                .addComponent(scpnGnrExps, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        background.add(pnlGeneralExpenses, new org.netbeans.lib.awtextra.AbsoluteConstraints(508, 66, -1, -1));

        pnlPenaltyFees.setBackground(new java.awt.Color(48, 108, 143));
        pnlPenaltyFees.setMaximumSize(new java.awt.Dimension(232, 110));
        pnlPenaltyFees.setMinimumSize(new java.awt.Dimension(232, 110));

        lsPntFs.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        lsPntFs.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Sin registros" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lsPntFs.setMaximumSize(new java.awt.Dimension(140, 35));
        lsPntFs.setMinimumSize(new java.awt.Dimension(140, 35));
        lsPntFs.setPreferredSize(new java.awt.Dimension(140, 35));
        scpnPntFs.setViewportView(lsPntFs);

        javax.swing.GroupLayout pnlPenaltyFeesLayout = new javax.swing.GroupLayout(pnlPenaltyFees);
        pnlPenaltyFees.setLayout(pnlPenaltyFeesLayout);
        pnlPenaltyFeesLayout.setHorizontalGroup(
            pnlPenaltyFeesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPenaltyFeesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scpnPntFs, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(86, Short.MAX_VALUE))
        );
        pnlPenaltyFeesLayout.setVerticalGroup(
            pnlPenaltyFeesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPenaltyFeesLayout.createSequentialGroup()
                .addContainerGap(54, Short.MAX_VALUE)
                .addComponent(scpnPntFs, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        background.add(pnlPenaltyFees, new org.netbeans.lib.awtextra.AbsoluteConstraints(508, 189, -1, -1));

        cmbEventPlace.setFont(new java.awt.Font("Inter", 0, 14)); // NOI18N
        cmbEventPlace.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbEventPlace.setMaximumSize(new java.awt.Dimension(200, 24));
        cmbEventPlace.setMinimumSize(new java.awt.Dimension(200, 24));
        cmbEventPlace.setPreferredSize(new java.awt.Dimension(200, 24));
        background.add(cmbEventPlace, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 190, -1, -1));

        cmbArtist.setFont(new java.awt.Font("Inter", 0, 14)); // NOI18N
        cmbArtist.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbArtist.setMaximumSize(new java.awt.Dimension(200, 24));
        cmbArtist.setMinimumSize(new java.awt.Dimension(200, 24));
        cmbArtist.setPreferredSize(new java.awt.Dimension(200, 24));
        background.add(cmbArtist, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 110, -1, -1));

        lstEquipment.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        lstEquipment.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lstEquipment.setToolTipText(org.openide.util.NbBundle.getMessage(FrmAddEvent.class, "FrmAddEvent.lstEquipment.toolTipText")); // NOI18N
        lstEquipment.setPreferredSize(new java.awt.Dimension(96, 96));
        scpnEquipment.setViewportView(lstEquipment);

        background.add(scpnEquipment, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 260, 120, 90));

        lstStaff.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        lstStaff.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lstStaff.setToolTipText(org.openide.util.NbBundle.getMessage(FrmAddEvent.class, "FrmAddEvent.lstStaff.toolTipText")); // NOI18N
        lstStaff.setPreferredSize(new java.awt.Dimension(96, 96));
        scpnStaff.setViewportView(lstStaff);

        background.add(scpnStaff, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 260, 120, 90));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, 770, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtReturnbtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtReturnbtnMouseEntered
         btnReturn.setBackground(btnHoverColor);
    }//GEN-LAST:event_txtReturnbtnMouseEntered

    private void txtReturnbtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtReturnbtnMouseExited
        btnReturn.setBackground(btnDefaultColor);
    }//GEN-LAST:event_txtReturnbtnMouseExited

    private void txtConfirmbtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtConfirmbtnMouseEntered
        btnConfirm.setBackground(btnHoverColor);
    }//GEN-LAST:event_txtConfirmbtnMouseEntered

    private void txtConfirmbtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtConfirmbtnMouseExited
        btnConfirm.setBackground(btnDefaultColor);
    }//GEN-LAST:event_txtConfirmbtnMouseExited

    private void txtReturnbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtReturnbtnMouseClicked
        this.dispose();
    }//GEN-LAST:event_txtReturnbtnMouseClicked

    private void txtConfirmbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtConfirmbtnMouseClicked
        boolean canContinue = validateData();

        if(canContinue==true){
            sendEventData();
        } 
    }//GEN-LAST:event_txtConfirmbtnMouseClicked

    private void txtAddExpenseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtAddExpenseMouseClicked
        FrmAddExpense frmExpense = new FrmAddExpense();
        frmExpense.setAddEventMenu(this);
        frmExpense.setVisible(true);
    }//GEN-LAST:event_txtAddExpenseMouseClicked

    private void txtAddPntFeeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtAddPntFeeMouseClicked
        FrmAddPenaltyFee frmPenaltyFee = new FrmAddPenaltyFee();
        frmPenaltyFee.setAddEventMenu(this);
        frmPenaltyFee.setVisible(true);
    }//GEN-LAST:event_txtAddPntFeeMouseClicked

    public void addExpense(Expense expense){
        this.generalExpenses.add(expense);
        updateExpenseList(generalExpenses);
    }
    
    private void updateExpenseList(ArrayList<Expense> expensesList){
        DefaultListModel listModel = new DefaultListModel();     
        String display;
        
        for(Expense currentExpense:expensesList){
            display = currentExpense.getType();
            listModel.addElement(display);
        }
        
        lstGnrExps.setModel(listModel);
    }
    
    public void addPenaltyFee(PenaltyFee penaltyFee){
        this.penaltyFees.add(penaltyFee);
        updatePenaltyFeeList(penaltyFees);
    }
    
    private void updatePenaltyFeeList(ArrayList<PenaltyFee> penaltyFeesList){
        DefaultListModel listModel = new DefaultListModel();     
        String display;
        
        for(PenaltyFee currentPenaltyFee:penaltyFeesList){
            display = currentPenaltyFee.getType();
            listModel.addElement(display);
        }
        
        lsPntFs.setModel(listModel);
    }
    
    private boolean validateData(){
        boolean passed = true;
        passed = HandleInput.validateInteger(spnStHour.getValue().toString());
        if(passed){
            passed = HandleInput.validateInteger(spnStMin.getValue().toString());
            if(passed){
                passed = HandleInput.validateInteger(spnEndHour.getValue().toString());
                if(passed){
                    passed = HandleInput.validateInteger(spnEndMin.getValue().toString());
                }
            }
        }
                
        return passed;
    }
    
    private void sendEventData(){
        EventController evtc = new EventController();
        
        int asignedId = Integer.parseInt(txtIdValue.getText());
        artist = getSelectedArtist();
        eventPlace = getSelectedEventPlace();
        staff = getSelectedStaff();
        equipment = getSelectedEquipment();
        
        startTime = getStartTime();
        endTime = getEndTime();
        
        event = new Event(asignedId, artist, eventPlace, startTime, endTime, staff, equipment, generalExpenses, penaltyFees);
        
        evtc.create(event);
        
        emptyFields();
        asignNewId();
    }
    
    private Schedule getStartTime(){
        
        int hours = Integer.parseInt(spnStHour.getValue().toString());
        int min = Integer.parseInt(spnStMin.getValue().toString());
        
        
        return new Schedule(min, min, min, hours, min);
    }
    
    private Schedule getEndTime(){
        
        int hours = Integer.parseInt(spnEndHour.getValue().toString());
        int min = Integer.parseInt(spnEndMin.getValue().toString());
        
        
        return new Schedule(min, min, min, hours, min);
    }
    
    
    private void asignNewId(){
        EventController evtc = new EventController();
        int asignedId = evtc.asignNewId();
        String displayNewId = Integer.toString(asignedId);
        
        txtIdValue.setText(displayNewId);
    }
    
    private void loadArtists(){
         DefaultComboBoxModel<String> listModel = new DefaultComboBoxModel();
         ArtistController artsc = new ArtistController();
         
         ArrayList<Artist> availableArtists = artsc.read();
         
         String display;
         
         for(Artist currentArtist:availableArtists){
            display = currentArtist.getId() + " " + currentArtist.getName();
            listModel.addElement(display);
         }
         
         cmbArtist.setModel(listModel);
     }
     
     private void loadEventPlaces(){
         DefaultComboBoxModel<String> listModel = new DefaultComboBoxModel();
         EventPlaceController evtplc = new EventPlaceController();
         
         ArrayList<EventPlace> availablePlaces = evtplc.read();
         
         for(EventPlace currentPlace:availablePlaces){
            listModel.addElement(currentPlace.getName());
         }
         
         cmbEventPlace.setModel(listModel);
     }
     
     private void loadStaff(){
        DefaultListModel listModel = new DefaultListModel();
        StaffController stfc = new StaffController();
        
        ArrayList<Staff> availableStaff = stfc.read();
        
        String display;
        
        for(Staff currentStaff:availableStaff){
            display = currentStaff.getId() + " " + currentStaff.getType();
            listModel.addElement(display);
        }
        
        lstStaff.setModel(listModel);
    }
    
    private void loadEquipment(){
        DefaultListModel listModel = new DefaultListModel();
        EquipmentController eqmc = new EquipmentController();
        
        ArrayList<Equipment> availableEquip = eqmc.read();
        
        for(Equipment currentEquip:availableEquip){
            listModel.addElement(currentEquip.getType());
        }
        
        lstEquipment.setModel(listModel);
    }
    
    private void emptyFields(){
        txtStartTime.setText("");
        spnStHour.setValue(1);
        spnStMin.setValue(0);
        
        txtEndTime.setText("");
        spnEndHour.setValue(1);
        spnEndMin.setValue(0);
        
        
        generalExpenses = new ArrayList<>();
        penaltyFees = new ArrayList<>();
        DefaultListModel listModel = new DefaultListModel();
        listModel.addElement("Sin registros");
        
        lstGnrExps.setModel(listModel);
        lsPntFs.setModel(listModel);
    }
    
    
    
    private Artist getSelectedArtist(){
        Artist selectedArtist;
        ArtistController artsc = new ArtistController();
        int reladtedId;
        
        String indexContent = String.valueOf(cmbArtist.getSelectedItem());
        
        reladtedId = Integer.parseInt(Character.toString(indexContent.charAt(0)));
        
        selectedArtist = artsc.findOne(reladtedId);
        
        return selectedArtist;
    }
    
    private EventPlace getSelectedEventPlace(){
        EventPlace selectedEventPalce;
        
        EventPlaceController evtplc = new EventPlaceController();
        
        String relatedName = String.valueOf(cmbEventPlace.getSelectedItem());
        
        selectedEventPalce = evtplc.findOne(relatedName);
        
        return selectedEventPalce;
    }
    
    private ArrayList<Staff> getSelectedStaff(){
        ArrayList<Staff> selectedStaff = new ArrayList<>();
        Staff fromStaff;
        
        StaffController stfc = new StaffController();
        int reladtedId;
        
        List<String> selectedIndices = lstStaff.getSelectedValuesList();
        
        for(String index:selectedIndices){
            reladtedId = Integer.parseInt(Character.toString(index.charAt(0)));
            
            fromStaff = stfc.findOne(reladtedId);
            selectedStaff.add(fromStaff);
        }
        
        return selectedStaff;
    }
    
    private ArrayList<Equipment> getSelectedEquipment(){
        ArrayList<Equipment> selectedEquipment = new ArrayList<>();
        Equipment fromEquipment;
        
        EquipmentController eqmc = new EquipmentController();
        String reladtedType;
        
        List<String> selectedIndices = lstEquipment.getSelectedValuesList();
        
        for(String index:selectedIndices){
            reladtedType = index;
            
            fromEquipment = eqmc.findOne(reladtedType);
            selectedEquipment.add(fromEquipment);
        }
        
        return selectedEquipment;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmAddEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmAddEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmAddEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmAddEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmAddEvent().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel background;
    private javax.swing.JPanel btnConfirm;
    private javax.swing.JPanel btnEdDtOp;
    private javax.swing.JPanel btnReturn;
    private javax.swing.JPanel btnStDtOp;
    private javax.swing.JComboBox<String> cmbArtist;
    private javax.swing.JComboBox<String> cmbEventPlace;
    private javax.swing.JList<String> lsPntFs;
    private javax.swing.JList<String> lstEquipment;
    private javax.swing.JList<String> lstGnrExps;
    private javax.swing.JList<String> lstStaff;
    private javax.swing.JPanel pnlEdDate;
    private javax.swing.JPanel pnlEndDate;
    private javax.swing.JPanel pnlGeneralExpenses;
    private javax.swing.JPanel pnlPenaltyFees;
    private javax.swing.JPanel pnlStDate;
    private javax.swing.JPanel pnlStartDate;
    private javax.swing.JScrollPane scpnEquipment;
    private javax.swing.JScrollPane scpnGnrExps;
    private javax.swing.JScrollPane scpnPntFs;
    private javax.swing.JScrollPane scpnStaff;
    private javax.swing.JSpinner spnEndHour;
    private javax.swing.JSpinner spnEndMin;
    private javax.swing.JSpinner spnStHour;
    private javax.swing.JSpinner spnStMin;
    private javax.swing.JSeparator sptTitle;
    private javax.swing.JLabel title;
    private javax.swing.JLabel txtAddExpense;
    private javax.swing.JLabel txtAddPntFee;
    private javax.swing.JLabel txtArtista;
    private javax.swing.JLabel txtConfirmbtn;
    private javax.swing.JLabel txtEndTime;
    private javax.swing.JLabel txtEquipos;
    private javax.swing.JLabel txtFechaFin;
    private javax.swing.JLabel txtFechaInicio;
    private javax.swing.JLabel txtGastos;
    private javax.swing.JLabel txtHoraFin;
    private javax.swing.JLabel txtHoraIn;
    private javax.swing.JLabel txtId;
    private javax.swing.JLabel txtIdValue;
    private javax.swing.JLabel txtInsertado;
    private javax.swing.JLabel txtInsertados;
    private javax.swing.JLabel txtLugar;
    private javax.swing.JLabel txtMinFin;
    private javax.swing.JLabel txtMinIn;
    private javax.swing.JLabel txtMultas;
    private javax.swing.JLabel txtOpEdDate;
    private javax.swing.JLabel txtOpStDate;
    private javax.swing.JLabel txtReturnbtn;
    private javax.swing.JLabel txtStaff;
    private javax.swing.JLabel txtStartTime;
    // End of variables declaration//GEN-END:variables
}
